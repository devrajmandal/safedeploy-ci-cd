name: Test, Build, Security Scan, and Deploy

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  # tfsec scan for Terraform security
  tfsec-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tfsec scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./terraform   # Make sure terraform/ exists with a dummy main.tf

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: tfsec-scan  # Wait for tfsec scan before build
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Docker setup
      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      # Docker login
      - name: Docker Credentials
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Create a unique version tag
      - name: Docker tag
        id: version
        run: |
          VERSION=v$(date +"%Y%m%d%H%M%S")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t devrajj11/safedeploy-ci-cd:${{ env.VERSION }} .

      # Trivy scan the Docker image
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: devrajj11/safedeploy-ci-cd:${{ env.VERSION }}
          format: 'table'
          exit-code: '0'  # Don't fail the job even if vulnerabilities exist

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push devrajj11/safedeploy-ci-cd:${{ env.VERSION }}

      # Update the K8s manifest file
      - name: Update K8s Manifests
        run: |
          echo "Before update:"
          cat deploy/deployment.yaml
          sed -i "s|image: devrajj11/safedeploy-ci-cd:.*|image: devrajj11/safedeploy-ci-cd:${{ env.VERSION }}|g" deploy/deployment.yaml
          echo "After update:"
          cat deploy/deployment.yaml

      # Commit and push changes if any
      - name: Commit the changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          git checkout main

          if ! git diff --quiet deploy/deployment.yaml; then
            git add deploy/deployment.yaml
            git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
            git push origin main
          else
            echo "No changes to commit"
          fi

      - name: Configure kubectl for EKS
        run: |
          aws eks --region ap-south-1 update-kubeconfig --name testing-cluster

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deploy/deployment.yaml
          kubectl apply -f deploy/svc.yaml

      - name: Apply SealedSecrets
        run: |
          kubectl apply -f deploy/mysealedsecret.yaml
